-- DDL Script for Voltz - MissÃ£o Tio Patinhas Database
-- Drop tables in correct order (child tables first due to foreign key constraints)
DROP TABLE T_TRANSACAO CASCADE CONSTRAINTS;
DROP TABLE T_TRANSFERENCIA CASCADE CONSTRAINTS;
DROP TABLE T_INVESTIMENTO CASCADE CONSTRAINTS;
DROP TABLE T_PREFERENCIAS CASCADE CONSTRAINTS;
DROP TABLE T_CARTEIRA CASCADE CONSTRAINTS;
DROP TABLE T_PF CASCADE CONSTRAINTS;
DROP TABLE T_PJ CASCADE CONSTRAINTS;
DROP TABLE T_USUARIO CASCADE CONSTRAINTS;
DROP TABLE T_MOEDA CASCADE CONSTRAINTS;

-- Create sequences for primary keys
DROP SEQUENCE SEQ_USUARIO;
DROP SEQUENCE SEQ_CARTEIRA;
DROP SEQUENCE SEQ_MOEDA;
DROP SEQUENCE SEQ_INVESTIMENTO;
DROP SEQUENCE SEQ_TRANSACAO;
DROP SEQUENCE SEQ_TRANSFERENCIA;
DROP SEQUENCE SEQ_PREFERENCIAS;

CREATE SEQUENCE SEQ_USUARIO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_CARTEIRA START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_MOEDA START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_INVESTIMENTO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TRANSACAO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TRANSFERENCIA START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_PREFERENCIAS START WITH 1 INCREMENT BY 1;

-- Create main tables
CREATE TABLE T_USUARIO (
    id_usuario NUMBER PRIMARY KEY,
    tipo VARCHAR2(2) NOT NULL CHECK (tipo IN ('PF', 'PJ')),
    email VARCHAR2(255) NOT NULL UNIQUE,
    senha VARCHAR2(255) NOT NULL,
    pais VARCHAR2(100) NOT NULL,
    estado VARCHAR2(100) NOT NULL,
    cidade VARCHAR2(100) NOT NULL,
    bairro VARCHAR2(100),
    rua VARCHAR2(255) NOT NULL,
    numero_imovel VARCHAR2(20) NOT NULL
);

CREATE TABLE T_PF (
    id_usuario NUMBER PRIMARY KEY,
    cpf VARCHAR2(14) NOT NULL UNIQUE,
    genero VARCHAR2(20) NOT NULL,
    idade NUMBER NOT NULL CHECK (idade > 0 AND idade <= 120),
    nome VARCHAR2(100) NOT NULL,
    sobrenome VARCHAR2(100) NOT NULL,
    CONSTRAINT FK_PF_USUARIO FOREIGN KEY (id_usuario) REFERENCES T_USUARIO(id_usuario) ON DELETE CASCADE
);

CREATE TABLE T_PJ (
    id_usuario NUMBER PRIMARY KEY,
    cnpj VARCHAR2(18) NOT NULL UNIQUE,
    ramo VARCHAR2(100) NOT NULL,
    nome_fantasia VARCHAR2(255) NOT NULL,
    CONSTRAINT FK_PJ_USUARIO FOREIGN KEY (id_usuario) REFERENCES T_USUARIO(id_usuario) ON DELETE CASCADE
);

CREATE TABLE T_CARTEIRA (
    id_carteira NUMBER PRIMARY KEY,
    saldo_em_real NUMBER(15,2) DEFAULT 0 NOT NULL CHECK (saldo_em_real >= 0),
    id_usuario NUMBER NOT NULL,
    CONSTRAINT FK_CARTEIRA_USUARIO FOREIGN KEY (id_usuario) REFERENCES T_USUARIO(id_usuario) ON DELETE CASCADE
);

CREATE TABLE T_MOEDA (
    id_moeda NUMBER PRIMARY KEY,
    nome VARCHAR2(100) NOT NULL,
    simbolo VARCHAR2(10) NOT NULL UNIQUE,
    cotacao_para_real NUMBER(15,8) NOT NULL CHECK (cotacao_para_real > 0)
);

CREATE TABLE T_INVESTIMENTO (
    id_investimento NUMBER PRIMARY KEY,
    id_moeda NUMBER NOT NULL,
    id_carteira NUMBER NOT NULL,
    quantidade_moeda NUMBER(20,8) DEFAULT 0 NOT NULL CHECK (quantidade_moeda >= 0),
    CONSTRAINT FK_INVESTIMENTO_MOEDA FOREIGN KEY (id_moeda) REFERENCES T_MOEDA(id_moeda) ON DELETE CASCADE,
    CONSTRAINT FK_INVESTIMENTO_CARTEIRA FOREIGN KEY (id_carteira) REFERENCES T_CARTEIRA(id_carteira) ON DELETE CASCADE,
    CONSTRAINT UK_INVESTIMENTO_MOEDA_CARTEIRA UNIQUE (id_moeda, id_carteira)
);

CREATE TABLE T_TRANSACAO (
    id_transacao NUMBER PRIMARY KEY,
    id_carteira NUMBER NOT NULL,
    id_investimento NUMBER NOT NULL,
    id_moeda NUMBER NOT NULL,
    tipo_operacao VARCHAR2(10) NOT NULL CHECK (tipo_operacao IN ('COMPRA', 'VENDA')),
    valor_total_transacao NUMBER(15,2) NOT NULL CHECK (valor_total_transacao > 0),
    valor_liquido_transacao NUMBER(15,2) NOT NULL CHECK (valor_liquido_transacao > 0),
    valor_taxa_transacao NUMBER(15,2) NOT NULL CHECK (valor_taxa_transacao >= 0),
    quantidade_moeda NUMBER(20,8) NOT NULL CHECK (quantidade_moeda > 0),
    status_transacao VARCHAR2(20) DEFAULT 'PENDENTE' NOT NULL CHECK (status_transacao IN ('ERRO', 'PENDENTE', 'CONCLUIDA')),
    data_transacao DATE DEFAULT SYSDATE,
    hora_transacao TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT FK_TRANSACAO_CARTEIRA FOREIGN KEY (id_carteira) REFERENCES T_CARTEIRA(id_carteira) ON DELETE CASCADE,
    CONSTRAINT FK_TRANSACAO_INVESTIMENTO FOREIGN KEY (id_investimento) REFERENCES T_INVESTIMENTO(id_investimento) ON DELETE CASCADE,
    CONSTRAINT FK_TRANSACAO_MOEDA FOREIGN KEY (id_moeda) REFERENCES T_MOEDA(id_moeda) ON DELETE CASCADE
);

CREATE TABLE T_TRANSFERENCIA (
    id_transferencia NUMBER PRIMARY KEY,
    id_carteira_remetente NUMBER NOT NULL,
    id_carteira_destinatario NUMBER NOT NULL,
    valor_transferencia NUMBER(15,2) NOT NULL CHECK (valor_transferencia > 0),
    status_transferencia VARCHAR2(20) DEFAULT 'PENDENTE' NOT NULL CHECK (status_transferencia IN ('ERRO', 'PENDENTE', 'CONCLUIDA')),
    data_transferencia DATE DEFAULT SYSDATE,
    hora_transferencia TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT FK_TRANSFERENCIA_REMETENTE FOREIGN KEY (id_carteira_remetente) REFERENCES T_CARTEIRA(id_carteira) ON DELETE CASCADE,
    CONSTRAINT FK_TRANSFERENCIA_DESTINATARIO FOREIGN KEY (id_carteira_destinatario) REFERENCES T_CARTEIRA(id_carteira) ON DELETE CASCADE,
    CONSTRAINT CK_TRANSFERENCIA_DIFERENTES CHECK (id_carteira_remetente != id_carteira_destinatario)
);

CREATE TABLE T_PREFERENCIAS (
    id_preferencias NUMBER PRIMARY KEY,
    id_usuario NUMBER NOT NULL,
    tema VARCHAR2(20) DEFAULT 'light' NOT NULL CHECK (tema IN ('light', 'dark')),
    idioma VARCHAR2(10) DEFAULT 'pt-BR' NOT NULL,
    receber_notificacoes NUMBER(1) DEFAULT 1 NOT NULL CHECK (receber_notificacoes IN (0, 1)),
    CONSTRAINT FK_PREFERENCIAS_USUARIO FOREIGN KEY (id_usuario) REFERENCES T_USUARIO(id_usuario) ON DELETE CASCADE
);

-- Create indexes for better performance
CREATE INDEX IDX_USUARIO_EMAIL ON T_USUARIO(email);
CREATE INDEX IDX_PF_CPF ON T_PF(cpf);
CREATE INDEX IDX_PJ_CNPJ ON T_PJ(cnpj);
CREATE INDEX IDX_CARTEIRA_USUARIO ON T_CARTEIRA(id_usuario);
CREATE INDEX IDX_MOEDA_SIMBOLO ON T_MOEDA(simbolo);
CREATE INDEX IDX_INVESTIMENTO_CARTEIRA ON T_INVESTIMENTO(id_carteira);
CREATE INDEX IDX_INVESTIMENTO_MOEDA ON T_INVESTIMENTO(id_moeda);
CREATE INDEX IDX_TRANSACAO_CARTEIRA ON T_TRANSACAO(id_carteira);
CREATE INDEX IDX_TRANSACAO_DATA ON T_TRANSACAO(data_transacao);
CREATE INDEX IDX_TRANSFERENCIA_REMETENTE ON T_TRANSFERENCIA(id_carteira_remetente);
CREATE INDEX IDX_TRANSFERENCIA_DESTINATARIO ON T_TRANSFERENCIA(id_carteira_destinatario);
CREATE INDEX IDX_TRANSFERENCIA_DATA ON T_TRANSFERENCIA(data_transferencia);
CREATE INDEX IDX_PREFERENCIAS_USUARIO ON T_PREFERENCIAS(id_usuario);

-- ALTER TABLE examples for demonstration (optional modifications)
-- These demonstrate ALTER capabilities, can be uncommented if needed

-- Add a new column to track last update time
-- ALTER TABLE T_MOEDA ADD data_atualizacao TIMESTAMP DEFAULT SYSTIMESTAMP;

-- Modify column size if needed
-- ALTER TABLE T_USUARIO MODIFY email VARCHAR2(320);

-- Add a new constraint
-- ALTER TABLE T_CARTEIRA ADD CONSTRAINT CK_SALDO_MAXIMO CHECK (saldo_em_real <= 99999999999999.99);

-- Drop and recreate a constraint
-- ALTER TABLE T_TRANSFERENCIA DROP CONSTRAINT CK_TRANSFERENCIA_DIFERENTES;
-- ALTER TABLE T_TRANSFERENCIA ADD CONSTRAINT CK_TRANSFERENCIA_DIFERENTES CHECK (id_carteira_remetente != id_carteira_destinatario);

-- Rename a column (if needed)
-- ALTER TABLE T_PREFERENCIAS RENAME COLUMN receber_notificacoes TO notificacoes_ativas;

COMMIT;